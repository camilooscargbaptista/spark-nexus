services:
  # ===========================================
  # INFRASTRUCTURE
  # ===========================================
  
  postgres:
    image: postgres:15-alpine
    container_name: sparknexus-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-sparknexus}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-SparkNexus2024!}
      - POSTGRES_DB=sparknexus_core
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared/database/init-multi-db.sh:/docker-entrypoint-initdb.d/init-multi-db.sh:ro
    ports:
      - "5432:5432"
    networks:
      - sparknexus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sparknexus}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: sparknexus-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-SparkRedis2024!}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sparknexus-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: sparknexus-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-sparknexus}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-SparkMQ2024!}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - sparknexus-network

  # ===========================================
  # CORE SERVICES
  # ===========================================

  auth-service:
    build:
      context: ./core/auth-service
      dockerfile: Dockerfile
    image: sparknexus/auth-service:latest
    container_name: sparknexus-auth
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sparknexus}:${POSTGRES_PASSWORD:-SparkNexus2024!}@postgres:5432/sparknexus_core
      - JWT_SECRET=${JWT_SECRET:-super-secret-jwt-key}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-SparkRedis2024!}@redis:6379/0
      - PORT=3001
    ports:
      - "3001:3001"
    networks:
      - sparknexus-network
    depends_on:
      postgres:
        condition: service_healthy

  billing-service:
    build:
      context: ./core/billing-service
      dockerfile: Dockerfile
    image: sparknexus/billing-service:latest
    container_name: sparknexus-billing
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sparknexus}:${POSTGRES_PASSWORD:-SparkNexus2024!}@postgres:5432/sparknexus_core
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PORT=3002
    ports:
      - "3002:3002"
    networks:
      - sparknexus-network
    depends_on:
      postgres:
        condition: service_healthy

  tenant-service:
    build:
      context: ./core/tenant-service
      dockerfile: Dockerfile
    image: sparknexus/tenant-service:latest
    container_name: sparknexus-tenant
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sparknexus}:${POSTGRES_PASSWORD:-SparkNexus2024!}@postgres:5432/sparknexus_tenants
      - PORT=3003
    ports:
      - "3003:3003"
    networks:
      - sparknexus-network
    depends_on:
      postgres:
        condition: service_healthy

  # ===========================================
  # FRONTEND DASHBOARDS
  # ===========================================

  admin-dashboard:
    build:
      context: ./core/admin-dashboard
      dockerfile: Dockerfile
    image: sparknexus/admin-dashboard:latest
    container_name: sparknexus-admin-dashboard
    restart: unless-stopped
    environment:
      - PORT=4200
      - API_GATEWAY_URL=http://localhost:8000
    ports:
      - "4200:4200"
    networks:
      - sparknexus-network

  client-dashboard:
    build:
      context: ./core/client-dashboard
      dockerfile: Dockerfile
    image: sparknexus/client-dashboard:latest
    container_name: sparknexus-client-dashboard
    restart: unless-stopped
    environment:
      - PORT=4201
      - API_GATEWAY_URL=http://localhost:8000
    ports:
      - "4201:4201"
    networks:
      - sparknexus-network

  # ===========================================
  # MODULES
  # ===========================================

  email-validator:
    build:
      context: ./modules/email-validator
      dockerfile: Dockerfile
    image: sparknexus/email-validator:latest
    container_name: sparknexus-email-validator
    restart: unless-stopped
    environment:
      - MODULE_ID=email-validator
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sparknexus}:${POSTGRES_PASSWORD:-SparkNexus2024!}@postgres:5432/sparknexus_modules
      - REDIS_URL=redis://:${REDIS_PASSWORD:-SparkRedis2024!}@redis:6379/3
      - PORT=4001
      - HUNTER_API_KEY=${HUNTER_API_KEY}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM:-noreply@sparknexus.com}
    ports:
      - "4001:4001"
    networks:
      - sparknexus-network
    depends_on:
      postgres:
        condition: service_healthy

  email-validator-worker:
    build:
      context: ./modules/email-validator
      dockerfile: Dockerfile.worker
    image: sparknexus/email-validator-worker:latest
    container_name: sparknexus-email-validator-worker
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-SparkRedis2024!}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sparknexus}:${POSTGRES_PASSWORD:-SparkNexus2024!}@postgres:5432/sparknexus_modules
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM:-noreply@sparknexus.com}
      - HUNTER_API_KEY=${HUNTER_API_KEY}
    networks:
      - sparknexus-network
    depends_on:
      - redis
      - postgres

  # ===========================================
  # API GATEWAY
  # ===========================================

  kong:
    image: kong:latest
    container_name: sparknexus-gateway
    restart: unless-stopped
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    volumes:
      - ./infrastructure/kong.yml:/usr/local/kong/kong.yml:ro
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - sparknexus-network

  # ===========================================
  # AUTOMATION
  # ===========================================

  n8n:
    image: n8nio/n8n:latest
    container_name: sparknexus-n8n
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin123}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://n8n:5678/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-sparknexus}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-SparkNexus2024!}
    volumes:
      - n8n_data:/home/node/.n8n
    ports:
      - "5678:5678"
    networks:
      - sparknexus-network
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  n8n_data:

networks:
  sparknexus-network:
    driver: bridge
